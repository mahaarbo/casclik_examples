<?xml version="1.0" encoding="utf-8"?>
<!-- This is based on the PR2 example in the article: "eTaSL/eTC: A constraint based Task Specification Language and Robot Controller using Expression Graphs" in IEEE/RSJ Conference on Intelligent Robots and Systems, 2014, doi: 10.1109/IROS.2014.6942760
Note: It uses a hand-modified pr2 urdf that allows for controlling some of the joint positions using 
--> 
<launch>  
  <!-- Upload the robot description -->
  <param name="robot_description" command="cat $(find casclik_tests)/urdf/pr2_modified.urdf" />

  <!-- Start up empty world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="gui" value="false" />
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_pr2_model" pkg="gazebo_ros" type="spawn_model" args="-unpause -urdf
									 -param robot_description
									 -model robot"
	respawn="false" output="screen" />
  
  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" type="string" value="" />
  </node>

  <!-- Fake Calibration -->
  <node pkg="rostopic" type="rostopic" name="fake_joint_calibration"
        args="pub /calibrated std_msgs/Bool true" />
  
  <!-- Load controller infos -->
  <rosparam file="$(find casclik_tests)/controllers/pr2_controllers.yaml" command="load"/>

  <!-- joint_state_controller -->
  <node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager"
	args="spawn joint_state_controller" respawn="false" output="screen"/>

  <!-- joint position controller spawner -->
  <node name="pr2_controller_spawner" pkg="controller_manager" type="controller_manager"
	args="spawn joint_position_controller" respawn="false" output="screen"/>
  
  <!-- Load RVIZ -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find casclik_tests)/rviz/pr2.rviz" />

  <!-- spawn our ball visualizer -->
  <node name="vizhandler" pkg="py_viz_marker" type="vizhandler.py" output="screen" args="-rate 50"/>

  <!-- Spawn our control node -->
  <node name="aertbelien_example" pkg="casclik_tests" type="aertbelien2014_example.py" output="screen"/>
</launch>
